# Generated by Django 5.2.1 on 2025-10-24 18:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("monitor", "0004_statuspage_urlgroup_monitoredurl_group_statuspageurl"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClickHeatmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_url", models.CharField(db_index=True, max_length=500)),
                ("x_position", models.IntegerField()),
                ("y_position", models.IntegerField()),
                ("viewport_width", models.IntegerField()),
                ("viewport_height", models.IntegerField()),
                ("element_tag", models.CharField(blank=True, max_length=50)),
                ("element_id", models.CharField(blank=True, max_length=100)),
                ("element_class", models.CharField(blank=True, max_length=200)),
                ("element_text", models.CharField(blank=True, max_length=200)),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("device_type", models.CharField(default="desktop", max_length=20)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="click_heatmaps",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["url", "page_url", "-timestamp"],
                        name="monitor_cli_url_id_6d2eca_idx",
                    ),
                    models.Index(
                        fields=["session_id"], name="monitor_cli_session_20a70f_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ConversionFunnel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("steps", models.JSONField()),
                ("date", models.DateField(db_index=True)),
                ("step_completion", models.JSONField()),
                ("conversion_rate", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversion_funnels",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["url", "-date"], name="monitor_con_url_id_e81389_idx"
                    )
                ],
                "unique_together": {("url", "name", "date")},
            },
        ),
        migrations.CreateModel(
            name="MouseMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("page_url", models.CharField(max_length=500)),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("rage_click", "Rage Click"),
                            ("dead_click", "Dead Click"),
                            ("error_click", "Error Click"),
                            ("hover", "Extended Hover"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("x_position", models.IntegerField()),
                ("y_position", models.IntegerField()),
                ("click_count", models.IntegerField(default=1)),
                ("element_selector", models.CharField(blank=True, max_length=200)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mouse_movements",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["url", "movement_type", "-timestamp"],
                        name="monitor_mou_url_id_935818_idx",
                    ),
                    models.Index(
                        fields=["session_id"], name="monitor_mou_session_58c0f1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("visitor_id", models.CharField(db_index=True, max_length=100)),
                ("page_url", models.CharField(max_length=500)),
                ("page_title", models.CharField(blank=True, max_length=200)),
                ("referrer", models.CharField(blank=True, max_length=500)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("time_on_page", models.FloatField(default=0)),
                ("scroll_depth", models.FloatField(default=0)),
                ("scroll_events", models.JSONField(default=list)),
                ("click_count", models.IntegerField(default=0)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("device_type", models.CharField(default="desktop", max_length=20)),
                ("browser", models.CharField(blank=True, max_length=50)),
                ("os", models.CharField(blank=True, max_length=50)),
                ("screen_resolution", models.CharField(blank=True, max_length=20)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("country_code", models.CharField(blank=True, max_length=2)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("region", models.CharField(blank=True, max_length=100)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("timezone", models.CharField(blank=True, max_length=50)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_views",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["url", "-timestamp"],
                        name="monitor_pag_url_id_7829b9_idx",
                    ),
                    models.Index(
                        fields=["session_id", "-timestamp"],
                        name="monitor_pag_session_4e1347_idx",
                    ),
                    models.Index(
                        fields=["visitor_id", "-timestamp"],
                        name="monitor_pag_visitor_b91d5a_idx",
                    ),
                    models.Index(
                        fields=["country_code", "-timestamp"],
                        name="monitor_pag_country_63e761_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_url", models.CharField(max_length=500)),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("first_contentful_paint", models.FloatField(blank=True, null=True)),
                ("largest_contentful_paint", models.FloatField(blank=True, null=True)),
                ("first_input_delay", models.FloatField(blank=True, null=True)),
                ("cumulative_layout_shift", models.FloatField(blank=True, null=True)),
                ("time_to_interactive", models.FloatField(blank=True, null=True)),
                ("dom_load_time", models.FloatField(blank=True, null=True)),
                ("page_load_time", models.FloatField(blank=True, null=True)),
                ("resource_load_time", models.FloatField(blank=True, null=True)),
                ("connection_type", models.CharField(blank=True, max_length=20)),
                ("effective_bandwidth", models.FloatField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["url", "-timestamp"],
                        name="monitor_per_url_id_71196a_idx",
                    ),
                    models.Index(
                        fields=["page_url", "-timestamp"],
                        name="monitor_per_page_ur_87c1c6_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ScrollHeatmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_url", models.CharField(db_index=True, max_length=500)),
                ("depth_distribution", models.JSONField(default=dict)),
                ("date", models.DateField(db_index=True)),
                ("total_views", models.IntegerField(default=0)),
                ("average_depth", models.FloatField(default=0)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scroll_heatmaps",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["url", "-date"], name="monitor_scr_url_id_3157b7_idx"
                    )
                ],
                "unique_together": {("url", "page_url", "date")},
            },
        ),
        migrations.CreateModel(
            name="SessionRecording",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                ("visitor_id", models.CharField(db_index=True, max_length=100)),
                ("start_time", models.DateTimeField(db_index=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.FloatField(default=0)),
                ("events", models.JSONField(default=list)),
                ("pages_visited", models.IntegerField(default=0)),
                ("total_clicks", models.IntegerField(default=0)),
                ("total_scrolls", models.IntegerField(default=0)),
                ("had_errors", models.BooleanField(default=False)),
                ("had_rage_clicks", models.BooleanField(default=False)),
                ("device_type", models.CharField(default="desktop", max_length=20)),
                ("browser", models.CharField(blank=True, max_length=50)),
                (
                    "url",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_recordings",
                        to="monitor.monitoredurl",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
                "indexes": [
                    models.Index(
                        fields=["url", "-start_time"],
                        name="monitor_ses_url_id_1f163a_idx",
                    ),
                    models.Index(
                        fields=["visitor_id", "-start_time"],
                        name="monitor_ses_visitor_a48b8b_idx",
                    ),
                ],
            },
        ),
    ]
